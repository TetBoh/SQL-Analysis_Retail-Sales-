//Checking the number of missing values

SELECT 
  SUM(CASE WHEN invoice_and_item_number IS NULL THEN 1 ELSE 0 END) AS invoice_and_item_number,
  SUM(CASE WHEN date IS NULL THEN 1 ELSE 0 END) AS date,
  SUM(CASE WHEN store_number IS NULL THEN 1 ELSE 0 END) AS store_number,
  SUM(CASE WHEN store_name IS NULL THEN 1 ELSE 0 END) AS store_name,
  SUM(CASE WHEN address IS NULL THEN 1 ELSE 0 END) AS address,
  SUM(CASE WHEN city IS NULL THEN 1 ELSE 0 END) AS city,
  SUM(CASE WHEN zip_code IS NULL THEN 1 ELSE 0 END) AS zip_code,
  SUM(CASE WHEN store_location IS NULL THEN 1 ELSE 0 END) AS store_location,
  SUM(CASE WHEN county_number IS NULL THEN 1 ELSE 0 END) AS county_number,
  SUM(CASE WHEN county IS NULL THEN 1 ELSE 0 END) AS county,
  SUM(CASE WHEN category IS NULL THEN 1 ELSE 0 END) AS category,
  SUM(CASE WHEN category_name IS NULL THEN 1 ELSE 0 END) AS category_name,
  SUM(CASE WHEN vendor_number IS NULL THEN 1 ELSE 0 END) AS vendor_number,
  SUM(CASE WHEN vendor_name IS NULL THEN 1 ELSE 0 END) AS vendor_name,
  SUM(CASE WHEN item_number IS NULL THEN 1 ELSE 0 END) AS item_number,
  SUM(CASE WHEN item_description IS NULL THEN 1 ELSE 0 END) AS item_description,
  SUM(CASE WHEN pack IS NULL THEN 1 ELSE 0 END) AS pack,
  SUM(CASE WHEN bottle_volume_ml IS NULL THEN 1 ELSE 0 END) AS bottle_volume_ml,
  SUM(CASE WHEN state_bottle_cost IS NULL THEN 1 ELSE 0 END) AS state_bottle_cost,
  SUM(CASE WHEN state_bottle_retail IS NULL THEN 1 ELSE 0 END) AS state_bottle_retail,
  SUM(CASE WHEN bottles_sold IS NULL THEN 1 ELSE 0 END) AS bottles_sold,
  SUM(CASE WHEN sale_dollars IS NULL THEN 1 ELSE 0 END) AS sale_dollars,
  SUM(CASE WHEN volume_sold_liters IS NULL THEN 1 ELSE 0 END) AS volume_sold_liters,
  SUM(CASE WHEN volume_sold_gallons IS NULL THEN 1 ELSE 0 END) AS volume_sold_gallons
FROM `junior-398212.course_project.sales_2020_01_2023`


//Checking the duplicates

SELECT 
  invoice_and_item_number,
  store_number,
  store_name,
  address,
  city,
  zip_code,
  county_number,
  county,
  category,
  category_name,
  vendor_number,
  vendor_name,
  item_number,
  item_description,
  pack,
  bottle_volume_ml,
  state_bottle_cost,
  state_bottle_retail,
  bottles_sold,
  sale_dollars,
  volume_sold_liters,
  volume_sold_gallons,
  COUNT(*)
FROM `junior-398212.course_project.sales_2020_01_2023`
GROUP BY 
  invoice_and_item_number,
  store_number,
  store_name,
  address,
  city,
  zip_code,
  county_number,
  county,
  category,
  category_name,
  vendor_number,
  vendor_name,
  item_number,
  item_description,
  pack,
  bottle_volume_ml,
  state_bottle_cost,
  state_bottle_retail,
  bottles_sold,
  sale_dollars,
  volume_sold_liters,
  volume_sold_gallons
HAVING 
  COUNT(*) > 1

//In this dataset, there are 3298 missing values ​​for the city column. 
//Since this column is needed for further analysis, we will populate it based on the store_name column

SELECT 
  *
FROM `junior-398212.course_project.sales_2020_01_2023` 
WHERE city IS NULL

//In the store_name column, after “/”, we take the name of the city and write it in the city column

UPDATE course_project.sales_2020_01_2023
SET city = TRIM(IFNULL(SPLIT(store_name, '/')[SAFE_OFFSET(1)], ''))
WHERE city IS NULL
